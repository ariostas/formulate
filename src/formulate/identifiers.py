# Licensed under a 3-clause BSD style license, see LICENSE.
from __future__ import annotations

UNARY_OPERATORS = {"pos", "neg", "binv", "linv"}

BINARY_OPERATORS = {
    "add",
    "sub",
    "mul",
    "div",
    "mod",
    "lt",
    "gt",
    "lte",
    "gte",
    "eq",
    "neq",
    "band",
    "bor",
    "bxor",
    "land",
    "lor",
    "pow",
    "lshift",
    "rshift",
    "multi_out",
}

COMMON_OPERATOR_SYMBOLS = {
    "pos": "+",
    "neg": "-",
    "add": "+",
    "sub": "-",
    "mul": "*",
    "div": "/",
    "mod": "%",
    "lt": "<",
    "gt": ">",
    "lte": "<=",
    "gte": ">=",
    "eq": "==",
    "neq": "!=",
    "pow": "**",
    "lshift": "<<",
    "rshift": ">>",
}

NUMEXPR_OPERATOR_SYMBOLS = {
    **COMMON_OPERATOR_SYMBOLS,
    "binv": "~",
    "band": "&",
    "bor": "|",
    "bxor": "^",
}

ROOT_OPERATOR_SYMBOLS = {
    **COMMON_OPERATOR_SYMBOLS,
    "linv": "!",
    "land": "&&",
    "lor": "||",
    "multi_out": ":",
}

CONSTANTS = {
    "true",
    "false",
    "inf",
    "neginf",
    "nan",
    "sqrt2",
    "e",
    "pi",
    "invpi",
    "piover2",
    "piover4",
    "tau",
    "ln10",
    "log10e",
    "deg2rad",
    "rad2deg",
    # cgs => Use cm, g, s for units
    # err => Uncertainty on quantity
    "avogadro",
    "avogadro_err",
    "boltzmann",
    "boltzmann_cgs",
    "boltzmann_err",
    "c",
    "c_cgs",
    "c_err",
    "dry_air_gas",
    "elementary_charge",
    "elementary_charge_err",
    "euler_mascheroni",
    "g",
    "g_cgs",
    "g_err",
    "g_over_hbarc",
    "g_over_hbarc_err",
    "grav_accel",
    "grav_accel_err",
    "h",
    "h_cgs",
    "h_err",
    "hbar",
    "hbar_cgs",
    "hbar_err",
    "hc",
    "hc_cgs",
    "mol_weight_dry_air",
    "stefan_boltzmann",
    "stefan_boltzmann_err",
    "universal_gas",
    "universal_gas_err",
}

NAMESPACES = {"math", "numpy", "np", "scipy", "tmath"}

FUNCTIONS = {
    "sqrt",
    "abs",
    "pow",
    "log",
    "log2",
    "log10",
    "log1p",
    "exp",
    "expm1",
    "sin",
    "cos",
    "tan",
    "asin",
    "acos",
    "atan",
    "atan2",
    "sinh",
    "cosh",
    "tanh",
    "asinh",
    "acosh",
    "atanh",
    # One argument functions in ROOT
    "besseli0",
    "besseli1",
    "besselj0",
    "besselj1",
    "bessely0",
    "bessely1",
    "ceil",
    "ceilnint",
    "dilog",
    "erf",
    "erfc",
    "erfinverse",
    "erfcinverse",
    "even",
    "factorial",
    "floor",
    "floornint",
    "freq",
    "kolmogorovprob",
    "landaui",
    "lngamma",
    "nextprime",
    "normquantile",
    "odd",
    "struveh0",
    "struveh1",
    "struvel0",
    "struvel1",
    # Two argument functions in ROOT
    "besseli",
    "besselk",
    "beta",
    "binomial",
    "chisquarequantile",
    "ldexp",
    "permute",
    "poisson",
    "poissoni",
    "prob",
    "student",
    "studenti",
    # Three argument functions in ROOT
    "areequalabs",
    "areequalrel",
    "betacf",
    "betadist",
    "betadisti",
    "betaincomplete",
    "binomiali",
    "bubblehigh",
    "bubblelow",
    "fdist",
    "fdisti",
    "vavilov",
    "vavilovi",
    # 4+ argument functions in ROOT
    "rootscubic",
    "quantiles",
}

FUNCTION_ALIASES = {
    "ln": "log",
    "arcsin": "asin",
    "arccos": "acos",
    "arctan": "atan",
    "arctan2": "atan2",
    "arcsinh": "asinh",
    "arccosh": "acosh",
    "arctanh": "atanh",
}

NUMEXPR_FUNCTIONS = {
    "sqrt": "sqrt",
    "abs": "abs",
    # "pow": "pow",
    "log": "log",
    # "log2",
    "log10": "log10",
    "log1p": "log1p",
    "exp": "exp",
    "expm1": "expm1",
    "sin": "sin",
    "cos": "cos",
    "tan": "tan",
    "asin": "arcsin",
    "acos": "arccos",
    "atan": "arctan",
    "atan2": "arctan2",
    "sinh": "sinh",
    "cosh": "cosh",
    "tanh": "tanh",
    "asinh": "arcsinh",
    "acosh": "arccosh",
    "atanh": "arctanh",
}

ROOT_FUNCTIONS = {
    "sqrt": "TMath::Sqrt",
    "abs": "TMath::Abs",
    "pow": "TMath::Power",
    "log": "TMath::Log",
    "log2": "TMath::Log2",
    "log10": "TMath::Log10",
    # "log1p": "TMath::Log1p",
    "exp": "TMath::Exp",
    # "expm1": "TMath::ExpM1",
    "sin": "TMath::Sin",
    "cos": "TMath::Cos",
    "tan": "TMath::Tan",
    "asin": "TMath::ASin",
    "acos": "TMath::ACos",
    "atan": "TMath::ATan",
    "atan2": "TMath::ATan2",
    "sinh": "TMath::SinH",
    "cosh": "TMath::CosH",
    "tanh": "TMath::TanH",
    "asinh": "TMath::ASinH",
    "acosh": "TMath::ACosH",
    "atanh": "TMath::ATanH",
    # One argument functions in ROOT
    "besseli0": "TMath::BesselI0",
    "besseli1": "TMath::BesselI1",
    "besselj0": "TMath::BesselJ0",
    "besselj1": "TMath::BesselJ1",
    "bessely0": "TMath::BesselY0",
    "bessely1": "TMath::BesselY1",
    "ceil": "TMath::Ceil",
    "ceilnint": "TMath::CeilNint",
    "dilog": "TMath::DiLog",
    "erf": "TMath::Erf",
    "erfc": "TMath::Erfc",
    "erfinverse": "TMath::ErfInverse",
    "erfcinverse": "TMath::ErfcInverse",
    "even": "TMath::Even",
    "factorial": "TMath::Factorial",
    "floor": "TMath::Floor",
    "floornint": "TMath::FloorNint",
    "freq": "TMath::Freq",
    "kolmogorovprob": "TMath::KolmogorovProb",
    "landaui": "TMath::LandauI",
    "lngamma": "TMath::LnGamma",
    "nextprime": "TMath::NextPrime",
    "normquantile": "TMath::NormQuantile",
    "odd": "TMath::Odd",
    "struveh0": "TMath::StruveH",
    "struveh1": "TMath::StruveH",
    "struvel0": "TMath::StruveL",
    "struvel1": "TMath::StruveL",
    # Two argument functions in ROOT
    "besseli": "TMath::BesselI",
    "besselk": "TMath::BesselK",
    "beta": "TMath::Beta",
    "binomial": "TMath::Binomial",
    "chisquarequantile": "TMath::ChisquareQuantile",
    "ldexp": "TMath::Ldexp",
    "permute": "TMath::Permute",
    "poisson": "TMath::Poisson",
    "poissoni": "TMath::PoissonI",
    "prob": "TMath::Prob",
    "student": "TMath::Student",
    "studenti": "TMath::StudentI",
    # Three argument functions in ROOT
    "areequalabs": "TMath::AreEqualAbs",
    "areequalrel": "TMath::AreEqualRel",
    "betacf": "TMath::BetaCf",
    "betadist": "TMath::BetaDist",
    "betadisti": "TMath::BetaDistI",
    "betaincomplete": "TMath::BetaIncomplete",
    "binomiali": "TMath::BinomialI",
    "bubblehigh": "TMath::BubbleHigh",
    "bubblelow": "TMath::BubbleLow",
    "fdist": "TMath::FDist",
    "fdisti": "TMath::FDistI",
    "vavilov": "TMath::Vavilov",
    "vavilovi": "TMath::VavilovI",
    # 4+ argument functions in ROOT
    "rootscubic": "TMath::RootsCubic",
    "quantiles": "TMath::Quantiles",
}
